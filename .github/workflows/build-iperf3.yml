name: 编译iperf3

on:
  schedule:
    - cron: '0 20 * * *'
  workflow_dispatch:
env:
  TZ: Asia/Shanghai

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.getversion.outputs.ver }}
      cver: ${{ steps.getversion.outputs.cver }}
    steps:
      -
        name: 检查更新
        id: getversion
        run: |
          ver=`curl https://api.github.com/repos/esnet/iperf/releases/latest | jq -r '.tag_name'`
          cver=`curl https://api.github.com/repos/lmq8267/iperf3/releases/latest | jq -r '.tag_name'`
          echo "ver=${ver}" >> $GITHUB_OUTPUT
          echo "cver=${cver}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: check
    if: ${{ needs.check.outputs.ver != needs.check.outputs.cver }}
    steps:
      -
        name: 检查代码仓库
        uses: actions/checkout@v3
      - name: Init submodules
        uses: snickerbockers/submodules-init@v4
      - name: 编译
        run: |
          mkdir -p ./musl_gcc 
          mkdir -p ./musl_gcc-arm64
          mkdir -p /opt/mipsel
          mkdir -p /opt/arm64
          sudo timedatectl set-timezone "Asia/Shanghai"
          wget -q -c https://downloads.openwrt.org/releases/22.03.5/targets/ramips/mt7621/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz -P /opt/musl_gcc/
          tar xJf /opt/musl_gcc/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz -C /opt/musl_gcc/
          export CC=/opt/musl_gcc/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64/toolchain-mipsel_24kc_gcc-11.2.0_musl/bin/mipsel-openwrt-linux-musl-gcc
          export LD=/opt/musl_gcc/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64/toolchain-mipsel_24kc_gcc-11.2.0_musl/bin/mipsel-openwrt-linux-musl-ld
          export AR=/opt/musl_gcc/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64/toolchain-mipsel_24kc_gcc-11.2.0_musl/bin/mipsel-openwrt-linux-musl-ar
          export RANLIB=/opt/musl_gcc/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64/toolchain-mipsel_24kc_gcc-11.2.0_musl/bin/mipsel-openwrt-linux-musl-ranlib
          rm -rf /opt/musl_gcc/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64/toolchain-mipsel_24kc_gcc-11.2.0_musl/lib/*.la
          export STAGING_DIR=/opt/musl_gcc/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64/toolchain-mipsel_24kc_gcc-11.2.0_musl
          git clone https://github.com/esnet/iperf -b ${{ needs.check.outputs.ver }} /opt/iperf
          git clone https://github.com/lmq8267/cloudflared.git /opt/st
          tar -xvf /opt/st/upx-3.95-amd64_linux.tar.xz -C /opt
          tar -xvf /opt/st/upx-4.1.0-amd64_linux.tar.xz -C /opt
          chmod 777 /opt/upx-3.95-amd64_linux/upx
          chmod 777 /opt/upx-4.1.0-amd64_linux/upx
          chmod 777 /opt/st/strip
          wget -q -c https://musl.cc/aarch64-linux-musl-cross.tgz -P /opt/musl_gcc-arm64/
          tar zxf /opt/musl_gcc-arm64/aarch64-linux-musl-cross.tgz -C /opt/musl_gcc-arm64/
          chmod 777 /opt/musl_gcc-arm64/aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip
          cd /opt/iperf
          ./configure LDFLAGS="-static -latomic -lpthread -no-pie" --host=mipsel-linux-musl --build=x86 --target=mipsel-linux \
          CC=/opt/musl_gcc/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64/toolchain-mipsel_24kc_gcc-11.2.0_musl/bin/mipsel-openwrt-linux-musl-gcc \
          --without-openssl --disable-shared --enable-static-bin CFLAGS="-latomic -static -pthread -no-pie"
          make
          cp -rf /opt/iperf/src/iperf3 /opt/mipsel/iperf3_musl_mipsel
          /opt/musl_gcc/openwrt-toolchain-22.03.5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64/toolchain-mipsel_24kc_gcc-11.2.0_musl/bin/mipsel-openwrt-linux-musl-strip /opt/mipsel/iperf3_musl_mipsel 
          cd /opt/mipsel
          /opt/upx-3.95-amd64_linux/upx --lzma --best iperf3_musl_mipsel
          cd /opt/iperf
          make clean
          export CC=/opt/musl_gcc-arm64/aarch64-linux-musl-cross/bin/aarch64-linux-musl-gcc
          export LD=/opt/musl_gcc-arm64/aarch64-linux-musl-cross/bin/aarch64-linux-musl-ld
          export AR=/opt/musl_gcc-arm64/aarch64-linux-musl-cross/bin/aarch64-linux-musl-ar
          export RANLIB=/opt/musl_gcc-arm64/aarch64-linux-musl-cross/bin/aarch64-linux-musl-ranlib
          rm -rf /opt/musl_gcc-arm64/aarch64-linux-musl-cross/aarch64-linux-musl/lib/*.la
          ./configure LDFLAGS="-static -latomic -lpthread -no-pie" --host=aarch64-linux-musl \
          --build=x86 --target=aarch64-linux CC=/opt/musl_gcc-arm64/aarch64-linux-musl-cross/bin/aarch64-linux-musl-gcc \
          --without-openssl --disable-shared --enable-static-bin CFLAGS="-static -latomic -lpthread -no-pie"
          make
          cp -rf /opt/iperf/src/iperf3 /opt/arm64/iperf3_musl_aarch64
          /opt/musl_gcc-arm64/aarch64-linux-musl-cross/bin/aarch64-linux-musl-strip /opt/arm64/iperf3_musl_aarch64
          cd /opt/arm64
          /opt/upx-4.1.0-amd64_linux/upx --lzma --best iperf3_musl_aarch64
          echo "build_time=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
      - 
        name: 发布
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.c8 }}
          body: |
           > ### 编译时间 ：${{ env.build_time }}
           
           - **arm64架构**：iperf3_musl_aarch64
           
           - **mipsel架构**：iperf3_musl_mipsel 

           下载后重命名为iperf3 , 上传至路由器并赋予执行权限即可

           **[官方更新说明](https://github.com/esnet/iperf/releases)**
          tag_name: ${{ needs.check.outputs.ver }}
          files: |
              /opt/mipsel/iperf3_musl_mipsel
              /opt/arm64/iperf3_musl_aarch64 
      - 
       name: 删除工作流
       uses: GitRML/delete-workflow-runs@main
       with:
        token: ${{ secrets.c8 }}
        retain_days: 2
        keep_minimum_runs: 0
